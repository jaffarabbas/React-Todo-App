{"version":3,"sources":["Components/CreateTask/CreateTask.js","Components/TaskList/TaskItem.js","Components/TaskList/TaskList.js","Components/Container/Main.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","props","handleInputChange","event","setState","task","target","value","handleSubmit","preventDefault","createTask","state","onSubmit","this","className","type","placeholder","onChange","autoFocus","Component","TaskItem","setEditingState","isEditing","toggleTask","id","deleteTask","handleEditChange","editTask","detailList","taskItem","onClick","readonly","checked","isCompleted","TaskList","tasks","map","index","Main","trim","push","alert","taskId","splice","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAIqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAKVC,kBAAoB,SAACC,GACjB,EAAKC,SAAS,CACVC,KAAMF,EAAMG,OAAOC,SARR,EAWnBC,aAAe,SAACL,GACZA,EAAMM,iBACN,EAAKR,MAAMS,WAAW,EAAKC,MAAMN,MACjC,EAAKD,SAAS,CAACC,KAAM,MAZrB,EAAKM,MAAQ,CACTN,KAAM,IAHK,E,0CAgBnB,WACI,OACI,uBAAMO,SAAUC,KAAKL,aAArB,UACI,uBAAOM,UAAU,4BAA4BC,KAAK,OAAOR,MAAOM,KAAKF,MAAMN,KAAMW,YAAY,eAAeC,SAAUJ,KAAKX,kBAAmBgB,WAAS,IACvJ,wBAAQJ,UAAU,8BAA8BC,KAAK,SAArD,wB,GArBwBI,aCAnBC,G,wDACjB,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IAMVoB,gBAAkB,SAACC,GACf,EAAKlB,SAAS,CAAEkB,UAAWA,KARZ,EAWnBC,WAAa,WACT,EAAKtB,MAAMsB,WAAW,EAAKtB,MAAMuB,KAZlB,EAenBC,WAAa,WACT,EAAKxB,MAAMwB,WAAW,EAAKxB,MAAMuB,KAhBlB,EAmBnBE,iBAAmB,SAACvB,GAChB,EAAKC,SAAS,CACVC,KAAMF,EAAMG,OAAOC,SArBR,EAwBnBC,aAAe,SAACL,GACZA,EAAMM,iBACN,EAAKR,MAAM0B,SAAS,EAAK1B,MAAMuB,GAAG,EAAKb,MAAMN,MAC7C,EAAKD,SAAS,CAACkB,WAAW,KA3BX,EA6BnBM,WAAa,WACT,EAAK3B,MAAM2B,WAAW,EAAK3B,MAAMuB,KA5BjC,EAAKb,MAAQ,CACTN,KAAM,EAAKJ,MAAM4B,SAASxB,KAC1BiB,WAAW,GAJA,E,0CAgCnB,WAAU,IAAD,OACL,OACI,6BACKT,KAAKF,MAAMW,UAEJ,qCACI,6BACI,sBAAMV,SAAUC,KAAKL,aAArB,SACI,uBAAOM,UAAU,eAAeP,MAAOM,KAAKF,MAAMN,KAAMY,SAAUJ,KAAKa,iBAAkBR,WAAS,QAG1G,+BACI,wBAAQY,QAASjB,KAAKL,aAAcO,KAAK,SAASD,UAAU,0BAA5D,kBADJ,OAEI,wBAAQgB,QAAS,kBAAM,EAAKT,iBAAgB,IAAQP,UAAU,yBAA9D,wBAKR,qCACI,qBAAIgB,QAASjB,KAAKU,WAAYT,UAAU,WAAxC,UACI,uBAAOA,UAAU,YAAYC,KAAK,WAAWgB,UAAQ,EAACC,QAASnB,KAAKZ,MAAM4B,SAASI,cADvF,OAGI,sBAAMnB,UAAWD,KAAKZ,MAAM4B,SAASI,YAAY,eAAe,qBAAhE,SACKpB,KAAKZ,MAAM4B,SAASxB,UAG7B,qBAAIS,UAAU,YAAd,UACI,wBAAQgB,QAAS,kBAAM,EAAKT,iBAAgB,IAAOP,UAAU,0BAA7D,kBADJ,OAEI,wBAAQgB,QAASjB,KAAKY,WAAYX,UAAU,yBAA5C,oBAFJ,OAGI,wBAAQgB,QAASjB,KAAKe,WAAYd,UAAU,yBAA5C,gC,GA9DMK,cCAjBe,E,4JACjB,WAAU,IAAD,OACL,OACI,wBAAOpB,UAAU,QAAjB,UACI,gCACI,+BACI,oBAAIA,UAAU,MAAd,kBACA,oBAAIA,UAAU,MAAd,0BAGR,gCACKD,KAAKZ,MAAMkC,MAAMC,KAAI,SAAC/B,EAAKgC,GAAN,OAClB,cAAC,EAAD,CAEIR,SAAUxB,EACVmB,GAAIa,EACJZ,WAAY,EAAKxB,MAAMwB,WACvBE,SAAU,EAAK1B,MAAM0B,SACrBJ,WAAc,EAAKtB,MAAMsB,WACzBK,WAAY,EAAK3B,MAAM2B,YANlBS,e,GAbKlB,aCEhCgB,G,MAAQ,IACOG,E,kDACjB,WAAYrC,GAAQ,IAAD,8BACf,cAAMA,IAMVS,WAAa,SAACL,GACU,KAAhBA,EAAKkC,QAITJ,EAAMK,KAAK,CAAEnC,OAAM4B,aAAa,IAChC,EAAK7B,SAAS,CAAE+B,MAAOA,KAJnBM,MAAM,wBATK,EAgBnBhB,WAAa,SAACiB,GACVP,EAAMQ,OAAOD,EAAQ,GACrB,EAAKtC,SAAS,CAAE+B,MAAOA,KAlBR,EAqBnBR,SAAW,SAACe,EAAQrC,GACC8B,EAAMO,GACdrC,KAAOA,EAChB,EAAKD,SAAS,CACV+B,MAAOA,KAzBI,EA6BnBZ,WAAa,SAACmB,GACV,IAAMb,EAAWM,EAAMO,GACvBb,EAASI,aAAeJ,EAASI,YACjC,EAAK7B,SAAS,CAAE+B,MAAOA,KAhCR,EAmCnBP,WAAa,SAACc,GACVE,QAAQC,IAAI,EAAKlC,MAAMwB,MAAMO,IAC7BD,MAAM,EAAK9B,MAAMwB,MAAMO,GAAQrC,OAnC/B,EAAKM,MAAQ,CACTwB,MAAO,IAHI,E,0CAuCnB,WACI,OACI,qBAAKrB,UAAU,YAAf,SACI,qBAAKA,UAAU,gCAAf,SAEI,sBAAKA,UAAU,GAAf,UACI,oBAAIA,UAAU,cAAd,sBACA,sBAAKA,UAAU,iBAAf,UACI,cAAC,EAAD,CAAYJ,WAAYG,KAAKH,aAC7B,cAAC,EAAD,CACIyB,MAAOtB,KAAKF,MAAMwB,MAClBV,WAAYZ,KAAKY,WACjBE,SAAUd,KAAKc,SACfJ,WAAYV,KAAKU,WACjBK,WAAYf,KAAKe,2B,GAtDfT,aCInB2B,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d12a8a86.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../CreateTask/css/CreateTask.css\"\r\n\r\nexport default class CreateTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: '',\r\n        }\r\n    }\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            task: event.target.value,\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.createTask(this.state.task);\r\n        this.setState({task: '',});\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input className=\"create_input form-control\" type=\"text\" value={this.state.task} placeholder=\"Enter a Todo\" onChange={this.handleInputChange} autoFocus/>\r\n                <button className=\"create_btn form-control btn\" type=\"submit\">Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../TaskList/css/TaskList.css'\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport default class TaskItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: this.props.taskItem.task,\r\n            isEditing: false,\r\n        };\r\n    }\r\n    setEditingState = (isEditing) => {\r\n        this.setState({ isEditing: isEditing })\r\n    }\r\n    //is done or not \r\n    toggleTask = () => {\r\n        this.props.toggleTask(this.props.id);\r\n    }\r\n    //delete\r\n    deleteTask = () => {\r\n        this.props.deleteTask(this.props.id)\r\n    }\r\n    //edit\r\n    handleEditChange = (event) => {\r\n        this.setState({\r\n            task: event.target.value,\r\n        });\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.editTask(this.props.id,this.state.task);\r\n        this.setState({isEditing: false,});\r\n    }\r\n    detailList = () => {\r\n        this.props.detailList(this.props.id)\r\n    }\r\n    render() {\r\n        return (\r\n            <tr>\r\n                {this.state.isEditing?\r\n                    (\r\n                        <>\r\n                            <td>\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <input className=\"form-control\" value={this.state.task} onChange={this.handleEditChange} autoFocus />\r\n                                </form>\r\n                            </td>\r\n                            <td>\r\n                                <button onClick={this.handleSubmit} type=\"submit\" className=\"crudBtn btn btn-primary\">Save</button>&nbsp;\r\n                                <button onClick={() => this.setEditingState(false)} className=\"crudBtn btn btn-danger\">back</button>\r\n                            </td>\r\n                        </>\r\n                    ) :\r\n                    (\r\n                        <>\r\n                            <td onClick={this.toggleTask} className=\"list_row\">\r\n                                <input className=\"checkList\" type=\"checkbox\" readonly checked={this.props.taskItem.isCompleted}/>\r\n                                &nbsp;\r\n                                <span className={this.props.taskItem.isCompleted?'completeTask':'task_not_completed'}>\r\n                                    {this.props.taskItem.task}\r\n                                </span>\r\n                            </td>\r\n                            <td className=\"btn_group\">\r\n                                <button onClick={() => this.setEditingState(true)} className=\"crudBtn btn btn-primary\">Edit</button>&nbsp;\r\n                                <button onClick={this.deleteTask} className=\"crudBtn btn btn-danger\">Delete</button>&nbsp;\r\n                                <button onClick={this.detailList} className=\"crudBtn btn btn-danger\">Detail</button>\r\n                            </td>\r\n                        </>\r\n                    )\r\n                }\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport TaskItem from './TaskItem'\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport default class TaskList extends Component {\r\n    render() {\r\n        return (\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"th1\">Task</th>\r\n                        <th className=\"th2\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.tasks.map((task,index) => (\r\n                        <TaskItem \r\n                            key={index} \r\n                            taskItem={task} \r\n                            id={index} \r\n                            deleteTask={this.props.deleteTask} \r\n                            editTask={this.props.editTask}\r\n                            toggleTask = {this.props.toggleTask}   \r\n                            detailList={this.props.detailList} \r\n                        />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport CreateTask from '../CreateTask/CreateTask';\r\nimport TaskList from '../TaskList/TaskList';\r\nimport \"../Container/css/Main.css\"\r\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nconst tasks = [];\r\nexport default class Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: [],\r\n        };\r\n    }\r\n    //create\r\n    createTask = (task) => {\r\n        if (task.trim() === '') {\r\n            alert('Task can\\'t be empty');\r\n            return;\r\n        }\r\n        tasks.push({ task, isCompleted: false })\r\n        this.setState({ tasks: tasks })\r\n    }\r\n    //delete\r\n    deleteTask = (taskId) => {\r\n        tasks.splice(taskId, 1);\r\n        this.setState({ tasks: tasks });\r\n    }\r\n    //edit\r\n    editTask = (taskId, task) => {\r\n        const taskItem = tasks[taskId];\r\n        taskItem.task = task;\r\n        this.setState({\r\n            tasks: tasks,\r\n        });\r\n    }\r\n    //complete task\r\n    toggleTask = (taskId) => {\r\n        const taskItem = tasks[taskId];\r\n        taskItem.isCompleted = !taskItem.isCompleted;\r\n        this.setState({ tasks: tasks });\r\n    }\r\n    //detial\r\n    detailList = (taskId) => {\r\n        console.log(this.state.tasks[taskId])\r\n        alert(this.state.tasks[taskId].task)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-md-center\">\r\n                {/* col-auto col-sm-auto col-md-auto */}\r\n                    <div className=\"\">\r\n                        <h1 className=\"todo-header\">Todo App</h1>\r\n                        <div className=\"form_container\">\r\n                            <CreateTask createTask={this.createTask} />\r\n                            <TaskList\r\n                                tasks={this.state.tasks}\r\n                                deleteTask={this.deleteTask}\r\n                                editTask={this.editTask}\r\n                                toggleTask={this.toggleTask}\r\n                                detailList={this.detailList}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\nimport Main from './Components/Container/Main'\n\nconst App = () => {\n  return (\n    <div>\n      <Main/>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}